import io.github.kobylynskyi.graphql.codegen.gradle.GraphQLCodegenGradleTask

plugins {
    id 'java'
    id "io.github.kobylynskyi.graphql.codegen" version "5.3.0"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:2.4.4"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:2.4.4"

    implementation "com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0"
    implementation "com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0"
    implementation "com.graphql-java:graphql-java-extended-scalars:16.0.1"

    // use the latest available version:
    // https://search.maven.org/artifact/io.github.kobylynskyi/graphql-java-codegen
    implementation "io.github.kobylynskyi:graphql-java-codegen:5.3.0"

    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "javax.validation:validation-api:2.0.1.Final"

    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

    compileOnly "org.projectlombok:lombok:1.18.18"
    annotationProcessor "org.projectlombok:lombok:1.18.12"

    implementation "io.rest-assured:rest-assured:4.3.3"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.1"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'joda-time', name: 'joda-time', version: '2.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-joda
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.13.0'

}

/**
 * Generate requests and model from another external service
 */
compileJava.dependsOn "graphqlCodegenStarwarsService"
sourceSets.main.java.srcDir "$buildDir/generated-client"
task graphqlCodegenStarwarsService(type: GraphQLCodegenGradleTask) {
    graphqlSchemas.includePattern = ".*\\.graphqls"
    outputDir = new File("$buildDir/generated-client")
    packageName = "com.example.apiaas.graphql"
    customTypesMapping = [
            DateTime: "org.joda.time.DateTime"
    ]
//    customAnnotationsMapping = [
//            "Character": [
//                    "@com.fasterxml.jackson.annotation.JsonTypeInfo(use = com.fasterxml.jackson.annotation.JsonTypeInfo.Id.NAME, property = \"__typename\")",
//                    "@com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver(io.github.kobylynskyi.order.external.starwars.CharacterTypeResolver.class)"
//            ]
//    ]
    generateClient = true
    generateApis = false
    generateBuilder = true
    generateToString = true
    generateParameterizedFieldsResolvers = false
}



apply plugin: "io.github.kobylynskyi.graphql.codegen"
